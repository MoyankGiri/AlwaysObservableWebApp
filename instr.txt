Steps to generate the grpc python code:

cd /home/chandradhar/Projects/CTY/AlwaysObservableWebApp

source venv/bin/activate

sudo ./generate_proto.sh post_svc post

 ./generate_proto.sh post_svc post auth_svc user

For client and server:
source /venv/bin/activate
clear;python3 post_server.py   
❯ clear;python3 post_client.py   

Steps to run the flask app:

run the grpc server for the required microservice
change the directory of the auth_svc according to your system
then run the api gateway

todo:

add edit posts/update posts button [done]
add in comments UI in blog posts
add logout UI in navbar
add dropdown to allow user to select "fetchRecent" time parameter and send it in the request.
small ui changes when i find free time

//starts minicube
minicube start

./kubectlRun.sh

//to get the nodes
kubectl get nodes -o wide

//to access the apigateway service, use port forwarding
kubectl port-forward svc/apigateway 5000

//to follow logs
❯ kubectl logs apigateway-867bd8975f-szhpr -f   

we get the node-ip from the internal-ip column of the get nodes command

NAME       STATUS   ROLES                  AGE   VERSION   INTERNAL-IP    EXTERNAL-IP   OS-IMAGE             
minikube   Ready    control-plane,master   36m   v1.23.1   192.168.49.2   <none>        Ubuntu 20.04.2 LTS   5.13.

//to access mongo shell
kubectl exec authmongodb-75c46b9457-gm5rq    -i -- bash
mongo

//to watch logs
kubectl logs authmicroservice-775bd5669c-fjnxn  --tail 1 --follow

create docker containers
push them to docker registry
ask kubernetes to pull from the docker registry

if any port is already occupied, grep it
sudo lsof -i -P -n | grep <port_num>

kill it
sudo kill <process_id>

seperate out the serves and deployments into individual files
for now set the replication factor to 1

//prometheus
1.if not already configured, at the file: /home/chandradhar/prometheus-2.34.0.linux-amd64/prometheus.yml, change the target to the webapplication url

2.to start prometheus, go to the prometheus directory located at: /home/chandradhar/prometheus-2.34.0.linux-amd64 and run ./prometheus

3. goto localhost:9090/graphs to see the graphs in the browser